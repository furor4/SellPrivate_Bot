from aiogram import Router
from aiogram.enums import ParseMode
from aiogram.filters import ChatMemberUpdatedFilter, JOIN_TRANSITION
from aiogram.types import ChatMemberUpdated

from config import bot, CHANNEL_ID, CHAT_ID

router = Router()


@router.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=JOIN_TRANSITION))  # –ë–æ—Ç–æ–º –Ω–µ–ª—å–∑—è –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –≥—Ä—É–ø–ø–∞—Ö
async def bot_added_to_group(event: ChatMemberUpdated):
    chat_id = event.chat.id

    if chat_id in [CHANNEL_ID, CHAT_ID]:
        return

    await bot.send_message(chat_id=chat_id, text="üí¨ <b>–Ø –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.</b>"
                                                 "\n\n<blockquote><i>–ï—Å–ª–∏ –≤–∞–º —Ç—Ä–µ–±—É—é—Ç—Å—è –º–æ–∏ —É—Å–ª—É–≥–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, "
                                                 "–Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –õ–°.</i></blockquote>", parse_mode=ParseMode.HTML)
    await bot.leave_chat(chat_id=chat_id)
