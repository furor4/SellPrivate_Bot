from aiogram import Router, F
from aiogram.enums import ParseMode
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy import select
from sqlalchemy.ext.asyncio import AsyncSession

from db.models import Users, Stats
from filters.is_private import PrivateChatFilter

router = Router()


@router.message(PrivateChatFilter(), Command('start'))
async def start(message: Message, session: AsyncSession):
    user_id = message.from_user.id
    fullname = message.from_user.full_name

    user = (await session.execute(select(Users).where(Users.user_id == user_id))).scalar_one_or_none()
    if not user:
        user = Users(user_id=user_id, fullname=fullname)
        session.add(user)
        await session.commit()

    stats = (await session.execute(select(Stats).where(Stats.id == 1))).scalar_one_or_none()
    if not stats:
        stats = Stats()
        session.add(stats)
        await session.commit()

    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='üîì –ü–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø', callback_data='choosing_tariff')]
        ]
    )

    text = '<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!</b> –Ø - –±–æ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ (–≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ä–µ—Å—É—Ä—Å, –∫ –∫–æ—Ç–æ—Ä–æ–º—É —á–µ–ª–æ–≤–µ–∫ –ø–æ–ª—É—á–∞–µ—Ç –¥–æ—Å—Ç—É–ø)'

    await message.reply(text, reply_markup=kb, parse_mode=ParseMode.HTML)
